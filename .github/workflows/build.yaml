name: Build
on:
  push:
    branches:
      - master
      - release
      - develop

jobs:
  test:
    uses: ./.github/workflows/test.yaml

  build:
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup .npmrc file to publish to GitHub Packages
      - name: Setup Node.js
        uses: actions/setup-node@v3

      - uses: actions/cache@v3
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: awesome-blog-client
          path: dist

  build-version:
    runs-on: ubuntu-latest
    outputs:
      BUILD_VERSION: ${{ steps.BuildVersion.outputs.BUILD_VERSION }}
    steps:
      - id: BuildVersion
        name: BuildVersion
        run: echo "BUILD_VERSION=v$(date +"%Y%m%d%H%M")" >> $GITHUB_OUTPUT

  upload-module:
    needs:
      - build
      - build-version
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: awesome-blog-client
          path: .

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload
        run: |
          aws s3 cp \
          ./awesome-blog-client/* \
          s3://awesome-cmn-mdl/artifact/blog/client/${{ needs.build-version.outputs.BUILD_VERSION}}/ \
          --recursive

  tag:
    needs:
      - upload-module
      - build-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Push Tag
        run: |
          git tag ${{ needs.build-version.outputs.BUILD_VERSION}}
          git push origin ${{ needs.build-version.outputs.BUILD_VERSION}}
