name: Build
on:
  workflow_call:
    inputs:
      dry-run:
        description: to prevent upload artifacts, set '1'
        required: true
        type: boolean
        default: false
    outputs:
      artifact-name:
        description: Name of artifact to upload
        value: awesome-blog-client
      build-version:
        description: build date
        value: ${{ jobs.build-version.outputs.build-version }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup .npmrc file to publish to GitHub Packages
      - name: Setup Node.js
        uses: actions/setup-node@v3

      - uses: actions/cache@v3
        id: node_modules_cache_id
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install
        if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm install

      - name: Build
        run: npm run build

      - name: Create lambda
        run: npm run create-index-lambda

      - name: Zip lambda
        run: zip -r ./dist/lambda/artifact.zip ./dist/lambda/index.js

      - name: Upload Artifacts
        if: inputs.dry-run != true
        uses: actions/upload-artifact@v3
        with:
          name: awesome-blog-client
          path: dist

  build-version:
    runs-on: ubuntu-latest
    outputs:
      build-version: ${{ steps.BuildVersion.outputs.build-version }}
    steps:
      - id: BuildVersion
        name: BuildVersion
        run: echo "build-version=v$(date +"%Y%m%d%H%M")" >> $GITHUB_OUTPUT

  upload-module:
    if: inputs.dry-run != true
    needs:
      - build
      - build-version
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: awesome-blog-client
          path: ./awesome-blog-client

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - id: Upload
        name: Upload
        run: |
          echo ${{ needs.build.outputs.build-version}}
          aws s3 cp \
          ./awesome-blog-client/ \
          s3://${{ secrets.S3_BUCKET_CMN_MODULE }}/artifact/blog/client/${{ needs.build-version.outputs.build-version}}/ \
          --recursive
